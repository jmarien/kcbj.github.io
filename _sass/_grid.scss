.container {
  @include flex-container( row, wrap, center, stretch, center );
  width:                100% !important;
  margin:               0;
  position:             relative;
  z-index:              50;
}

.container .wrapper {
  position:             relative;
  z-index:              100;
  @include flex( 1 1 auto );
  @include flex-container( column, wrap, flex-start, stretch, center );

  padding:              0 $grid-hor-padding;
  max-width:            $grid-max-width;
  box-sizing:           border-box;

  .text {
    max-width:          $grid-text-width;
    width:              100%;
    margin:             0 auto;
  }
}

.container .horizontal {
  @include flex( 1 1 auto );
  @include flex-container( column, wrap, flex-start, stretch, center );

  @media screen and ( min-width: $grid-min-width ) {
    @include flex-container( row, wrap, center, stretch, center );

    &.spread {
      @include justify-content( space-between );
    }

    & > * {
      @include flex( 1 1 auto );
    }
  }
}

.container .horizontal .background {
  max-width:              none;
  min-height:             $hero-height;   
  @include background;

  @media screen and ( min-width: $grid-min-width ) {
    min-height:             50vh;
  }

  @include flex( 0 0 50% );
  overflow-x:             hidden;
  position:               relative;

  .overlay {
    max-width:            100%;
  }
}


.container .horizontal .content {
  @include order( 0 );
  max-width:                $grid-max-width / 2;
  @include flex( 1 1 50% );
  box-sizing:               border-box;
}

.container .horizontal .content {
  padding:                     $base-line-height $grid-hor-padding;
}

.container .horizontal.left {
  @include justify-content( flex-start );
}

.container .horizontal.right {
  @include justify-content( flex-end );
}

@media screen and ( min-width: $grid-min-width ) {
  .container .horizontal.left .content {
    padding:                  $base-line-height * 3 $grid-hor-padding * 5 $base-line-height $grid-hor-padding * 2;
  }

  .container .horizontal.left .background {
    @include order( -1 );
  }

  .container .horizontal.right .content {
    padding:                  $base-line-height * 3 $grid-hor-padding * 2 $base-line-height $grid-hor-padding * 5;
  }

  .container .horizontal.right .background {
    @include order( 1 );
  }
}

// Currently container is flex-direction: row, fullscreen
// could be made nicer by switching to flex-direction: column
.container.fullscreen {
  min-height:             100vh;
  box-sizing:             border-box;
  @include align-content( stretch );
  margin:                 $base-line-height * 3 0;
  padding:                0;

  & > * {
    width:                100%;
  }

  .filler {
    @media screen and (min-width: $grid-min-width) {
      position:             absolute;
      top:                  0;
      bottom:               0;
      left:                 0;
      right:                0;
    }

    @include flex-container( column, no-wrap, space-between, stretch, center );
    // @include display( flex );
    // @include flex-direction( column );
    // @include justify-content( space-between );
    // @include align-items( stretch );
    // @include align-content( center );

    & > * {
      width:              100%;
    }
  }

  &.first {
    padding-top:          5 * $base-line-height;
  }
}

.overlay {
  background-color:       rgba( 0, 0, 0, .6 );
  position:               absolute;
  top:                    0;
  right:                  0;
  bottom:                 0;
  left:                   0;
  z-index:                90;

  &.blue {
    background-color:     transparentize( $blue, .2 );
  }
}
